version: '3.8'

services:
  open-lovable-pwa:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: open-lovable-pwa
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Mount SSL certificates (optional - for production)
      - ./ssl:/etc/ssl/certs:ro
      - ./ssl:/etc/ssl/private:ro
      # Mount logs
      - ./logs:/var/log/nginx
    environment:
      - NODE_ENV=production
      - DOMAIN=open-lovable.local
    networks:
      - pwa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (future enhancement)
  # redis:
  #   image: redis:alpine
  #   container_name: open-lovable-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - pwa-network

  # Optional: Monitoring with Prometheus
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: open-lovable-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus-data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--storage.tsdb.retention.time=200h'
  #     - '--web.enable-lifecycle'
  #   networks:
  #     - pwa-network

  # Optional: Grafana for visualization
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: open-lovable-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   networks:
  #     - pwa-network

networks:
  pwa-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  # redis-data:
  # prometheus-data:
  # grafana-data: